openapi: "3.0.0"
info:
  version: 1.0.0
  title: 民泊物件情報API
  description: 民泊物件の管理をサポートするAPI
  license:
    name: MIT
servers:
  - url: https://www.enabler.fun/api
paths:
  /properties:
    get:
      summary: すべての民泊施設を取得
      operationId: listProperties
      tags:
        - properties
      parameters:
        - name: limit
          in: query
          description: 一度に返す項目数（最大100）
          required: false
          schema:
            type: integer
            maximum: 100
            format: int32
      responses:
        '200':
          description: 民泊施設の配列
          headers:
            x-next:
              description: 次のページへのリンク
              schema:
                type: string
          content:
            application/json:    
              schema:
                $ref: "#/components/schemas/Properties"
        default:
          description: 予期せぬエラー
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      summary: 新しい民泊施設を作成
      operationId: createProperty
      tags:
        - properties
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PropertyInput'
      responses:
        '201':
          description: 作成成功
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Property"
        default:
          description: 予期せぬエラー
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /properties/{propertyId}:
    get:
      summary: 特定の民泊施設を取得
      operationId: getPropertyById
      tags:
        - properties
      parameters:
        - name: propertyId
          in: path
          required: true
          description: 取得する物件のID
          schema:
            type: string
      responses:
        '200':
          description: 民泊施設の詳細情報
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Property"
        default:
          description: 予期せぬエラー
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    put:
      summary: 特定の民泊施設を更新
      operationId: updateProperty
      tags:
        - properties
      parameters:
        - name: propertyId
          in: path
          required: true
          description: 更新する物件のID
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PropertyInput'
      responses:
        '200':
          description: 更新成功
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Property"
        default:
          description: 予期せぬエラー
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    delete:
      summary: 特定の民泊施設を削除
      operationId: deleteProperty
      tags:
        - properties
      parameters:
        - name: propertyId
          in: path
          required: true
          description: 削除する物件のID
          schema:
            type: string
      responses:
        '204':
          description: 削除成功
        default:
          description: 予期せぬエラー
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
components:
  schemas:
    Property:
      type: object
      required:
        - id
        - title
        - price
        - bedrooms
        - bathrooms
        - area
      properties:
        id:
          type: string
          example: "hawaii-beach-house-001"
          description: "物件の一意識別子"
        title:
          type: string
          example: "ハワイのビーチハウス"
          description: "物件のタイトル"
        price:
          type: number
          example: 2500000
          description: "価格（宿泊料金または購入価格）"
        bedrooms:
          type: integer
          minimum: 0
          example: 3
          description: "寝室の数"
        bathrooms:
          type: integer
          minimum: 0
          example: 2
          description: "バスルームの数"
        area:
          type: number
          minimum: 0
          example: 190
          description: "物件の面積"
        address:
          type: string
          example: "ハワイ、ワイキキビーチ近く"
          description: "物件の所在地"
        priceUnit:
          type: string
          enum: ["泊", "週", "月", "年", "棟", "区分"]
          example: "泊"
          description: "価格の単位"
        ownershipType:
          type: string
          enum: ["全所有権", "共有持分", "区分所有"]
          example: "全所有権"
          description: "所有権の種類"
        description:
          type: string
          example: "長い間探し続けた海沿いの一軒家が、ついに完成しました！"
          description: "物件の詳細な説明"
        imageUrls:
          type: array
          items:
            type: string
            format: uri
          example: ["https://example.com/hawaii-house1.jpg", "https://example.com/hawaii-house2.jpg"]
          description: "物件の画像URL一覧"
        amenities:
          type: array
          items:
            type: string
          example: ["高級アメニティ", "ビーチフロント", "無料Wi-Fi"]
          description: "物件の設備・アメニティ一覧"
    PropertyInput:
      type: object
      required:
        - title
        - price
        - bedrooms
        - bathrooms
        - area
      properties:
        title:
          type: string
        price:
          type: number
        bedrooms:
          type: integer
        bathrooms:
          type: integer
        area:
          type: number
        address:
          type: string
        priceUnit:
          type: string
          enum: ["泊", "週", "月", "年", "棟", "区分"]
        ownershipType:
          type: string
          enum: ["全所有権", "共有持分", "区分所有"]
        description:
          type: string
        imageUrls:
          type: array
          items:
            type: string
            format: uri
        amenities:
          type: array
          items:
            type: string
    Properties:
      type: array
      maxItems: 100
      items:
        $ref: "#/components/schemas/Property"
    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string